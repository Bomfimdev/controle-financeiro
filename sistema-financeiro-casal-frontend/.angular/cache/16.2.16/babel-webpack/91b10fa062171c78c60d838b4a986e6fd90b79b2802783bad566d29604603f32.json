{"ast":null,"code":"import { NovaTransacaoDialogComponent } from './nova-transacao-dialog/nova-transacao-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/supabase.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/icon\";\nimport * as i10 from \"@angular/material/select\";\nimport * as i11 from \"@angular/material/core\";\nfunction TransacoesComponent_mat_option_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const conta_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", conta_r5.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", conta_r5.nome, \" \");\n  }\n}\nfunction TransacoesComponent_mat_option_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const categoria_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", categoria_r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", categoria_r6, \" \");\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    \"entrada\": a0,\n    \"saida\": a1\n  };\n};\nfunction TransacoesComponent_div_23_mat_card_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card\", 13)(1, \"mat-card-header\")(2, \"mat-card-title\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-card-subtitle\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"date\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"mat-card-content\")(8, \"p\", 14);\n    i0.ɵɵtext(9);\n    i0.ɵɵpipe(10, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"p\", 15);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const transacao_r8 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(transacao_r8.descricao);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" \", i0.ɵɵpipeBind2(6, 6, transacao_r8.data, \"dd/MM/yyyy\"), \" - \", transacao_r8.categoria, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(12, _c0, transacao_r8.tipo === \"entrada\", transacao_r8.tipo === \"saida\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(10, 9, transacao_r8.valor, \"BRL\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(transacao_r8.conta_nome);\n  }\n}\nfunction TransacoesComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, TransacoesComponent_div_23_mat_card_1_Template, 13, 15, \"mat-card\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.transacoes);\n  }\n}\nfunction TransacoesComponent_ng_template_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"p\");\n    i0.ɵɵtext(2, \"Nenhuma transa\\u00E7\\u00E3o encontrada.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function TransacoesComponent_ng_template_24_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.abrirDialogNovaTransacao());\n    });\n    i0.ɵɵelementStart(4, \"mat-icon\");\n    i0.ɵɵtext(5, \"add\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \" Registrar Primeira Transa\\u00E7\\u00E3o \");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class TransacoesComponent {\n  constructor(supabaseService, dialog, snackBar) {\n    this.supabaseService = supabaseService;\n    this.dialog = dialog;\n    this.snackBar = snackBar;\n    this.transacoes = [];\n    this.contas = [];\n    this.categorias = [];\n    this.contaFiltro = '';\n    this.categoriaFiltro = '';\n  }\n  ngOnInit() {\n    this.carregarDados();\n  }\n  carregarDados() {\n    // Carregar contas\n    this.supabaseService.getContas().subscribe({\n      next: data => {\n        this.contas = data;\n      },\n      error: error => {\n        this.snackBar.open('Erro ao carregar contas', 'Fechar', {\n          duration: 3000\n        });\n      }\n    });\n    // Carregar categorias\n    this.supabaseService.getCategorias().subscribe({\n      next: data => {\n        this.categorias = data;\n      },\n      error: error => {\n        this.snackBar.open('Erro ao carregar categorias', 'Fechar', {\n          duration: 3000\n        });\n      }\n    });\n    // Carregar transações\n    this.carregarTransacoes();\n  }\n  carregarTransacoes() {\n    this.supabaseService.getTransacoes(this.contaFiltro, this.categoriaFiltro).subscribe({\n      next: data => {\n        this.transacoes = data;\n      },\n      error: error => {\n        this.snackBar.open('Erro ao carregar transações', 'Fechar', {\n          duration: 3000\n        });\n      }\n    });\n  }\n  aplicarFiltros() {\n    this.carregarTransacoes();\n  }\n  abrirDialogNovaTransacao() {\n    const dialogRef = this.dialog.open(NovaTransacaoDialogComponent, {\n      width: '400px',\n      data: {\n        contas: this.contas,\n        categorias: this.categorias\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.carregarTransacoes();\n      }\n    });\n  }\n  static {\n    this.ɵfac = function TransacoesComponent_Factory(t) {\n      return new (t || TransacoesComponent)(i0.ɵɵdirectiveInject(i1.SupabaseService), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.MatSnackBar));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TransacoesComponent,\n      selectors: [[\"app-transacoes\"]],\n      decls: 26,\n      vars: 6,\n      consts: [[1, \"transacoes-container\"], [1, \"header\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [1, \"filtros\"], [\"appearance\", \"fill\"], [3, \"ngModel\", \"ngModelChange\", \"selectionChange\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"transacoes-lista\", 4, \"ngIf\", \"ngIfElse\"], [\"semTransacoes\", \"\"], [3, \"value\"], [1, \"transacoes-lista\"], [\"class\", \"transacao-card\", 4, \"ngFor\", \"ngForOf\"], [1, \"transacao-card\"], [1, \"valor\", 3, \"ngClass\"], [1, \"conta\"], [1, \"sem-transacoes\"]],\n      template: function TransacoesComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n          i0.ɵɵtext(3, \"Transa\\u00E7\\u00F5es\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"button\", 2);\n          i0.ɵɵlistener(\"click\", function TransacoesComponent_Template_button_click_4_listener() {\n            return ctx.abrirDialogNovaTransacao();\n          });\n          i0.ɵɵelementStart(5, \"mat-icon\");\n          i0.ɵɵtext(6, \"add\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(7, \" Nova Transa\\u00E7\\u00E3o \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"div\", 3)(9, \"mat-form-field\", 4)(10, \"mat-label\");\n          i0.ɵɵtext(11, \"Conta\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"mat-select\", 5);\n          i0.ɵɵlistener(\"ngModelChange\", function TransacoesComponent_Template_mat_select_ngModelChange_12_listener($event) {\n            return ctx.contaFiltro = $event;\n          })(\"selectionChange\", function TransacoesComponent_Template_mat_select_selectionChange_12_listener() {\n            return ctx.aplicarFiltros();\n          });\n          i0.ɵɵelementStart(13, \"mat-option\", 6);\n          i0.ɵɵtext(14, \"Todas as contas\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(15, TransacoesComponent_mat_option_15_Template, 2, 2, \"mat-option\", 7);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"mat-form-field\", 4)(17, \"mat-label\");\n          i0.ɵɵtext(18, \"Categoria\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"mat-select\", 5);\n          i0.ɵɵlistener(\"ngModelChange\", function TransacoesComponent_Template_mat_select_ngModelChange_19_listener($event) {\n            return ctx.categoriaFiltro = $event;\n          })(\"selectionChange\", function TransacoesComponent_Template_mat_select_selectionChange_19_listener() {\n            return ctx.aplicarFiltros();\n          });\n          i0.ɵɵelementStart(20, \"mat-option\", 6);\n          i0.ɵɵtext(21, \"Todas as categorias\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(22, TransacoesComponent_mat_option_22_Template, 2, 2, \"mat-option\", 7);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(23, TransacoesComponent_div_23_Template, 2, 1, \"div\", 8);\n          i0.ɵɵtemplate(24, TransacoesComponent_ng_template_24_Template, 7, 0, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          const _r3 = i0.ɵɵreference(25);\n          i0.ɵɵadvance(12);\n          i0.ɵɵproperty(\"ngModel\", ctx.contaFiltro);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.contas);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.categoriaFiltro);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.categorias);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.transacoes.length > 0)(\"ngIfElse\", _r3);\n        }\n      },\n      dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i5.NgControlStatus, i5.NgModel, i6.MatButton, i7.MatCard, i7.MatCardContent, i7.MatCardHeader, i7.MatCardSubtitle, i7.MatCardTitle, i8.MatFormField, i8.MatLabel, i9.MatIcon, i10.MatSelect, i11.MatOption, i4.CurrencyPipe, i4.DatePipe],\n      styles: [\".transacoes-container[_ngcontent-%COMP%] {\\n  padding: 20px;\\n}\\n\\n.header[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-bottom: 20px;\\n}\\n\\n.filtros[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 20px;\\n  margin-bottom: 20px;\\n}\\n\\n.transacoes-lista[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\\n  gap: 20px;\\n}\\n\\n.transacao-card[_ngcontent-%COMP%] {\\n  height: 100%;\\n}\\n\\n.valor[_ngcontent-%COMP%] {\\n  font-size: 1.2em;\\n  font-weight: bold;\\n  margin: 10px 0;\\n}\\n\\n.entrada[_ngcontent-%COMP%] {\\n  color: #4caf50;\\n}\\n\\n.saida[_ngcontent-%COMP%] {\\n  color: #f44336;\\n}\\n\\n.conta[_ngcontent-%COMP%] {\\n  color: #666;\\n  font-size: 0.9em;\\n}\\n\\n.sem-transacoes[_ngcontent-%COMP%] {\\n  text-align: center;\\n  padding: 40px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy90cmFuc2Fjb2VzL3RyYW5zYWNvZXMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNJO0VBQ0UsYUFBQTtBQUFOOztBQUdJO0VBQ0UsYUFBQTtFQUNBLDhCQUFBO0VBQ0EsbUJBQUE7RUFDQSxtQkFBQTtBQUFOOztBQUdJO0VBQ0UsYUFBQTtFQUNBLFNBQUE7RUFDQSxtQkFBQTtBQUFOOztBQUdJO0VBQ0UsYUFBQTtFQUNBLDREQUFBO0VBQ0EsU0FBQTtBQUFOOztBQUdJO0VBQ0UsWUFBQTtBQUFOOztBQUdJO0VBQ0UsZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLGNBQUE7QUFBTjs7QUFHSTtFQUNFLGNBQUE7QUFBTjs7QUFHSTtFQUNFLGNBQUE7QUFBTjs7QUFHSTtFQUNFLFdBQUE7RUFDQSxnQkFBQTtBQUFOOztBQUdJO0VBQ0Usa0JBQUE7RUFDQSxhQUFBO0FBQU4iLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICAudHJhbnNhY29lcy1jb250YWluZXIge1xuICAgICAgcGFkZGluZzogMjBweDtcbiAgICB9XG5cbiAgICAuaGVhZGVyIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICB9XG5cbiAgICAuZmlsdHJvcyB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZ2FwOiAyMHB4O1xuICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICB9XG5cbiAgICAudHJhbnNhY29lcy1saXN0YSB7XG4gICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maWxsLCBtaW5tYXgoMzAwcHgsIDFmcikpO1xuICAgICAgZ2FwOiAyMHB4O1xuICAgIH1cblxuICAgIC50cmFuc2FjYW8tY2FyZCB7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgfVxuXG4gICAgLnZhbG9yIHtcbiAgICAgIGZvbnQtc2l6ZTogMS4yZW07XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgIG1hcmdpbjogMTBweCAwO1xuICAgIH1cblxuICAgIC5lbnRyYWRhIHtcbiAgICAgIGNvbG9yOiAjNGNhZjUwO1xuICAgIH1cblxuICAgIC5zYWlkYSB7XG4gICAgICBjb2xvcjogI2Y0NDMzNjtcbiAgICB9XG5cbiAgICAuY29udGEge1xuICAgICAgY29sb3I6ICM2NjY7XG4gICAgICBmb250LXNpemU6IDAuOWVtO1xuICAgIH1cblxuICAgIC5zZW0tdHJhbnNhY29lcyB7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBwYWRkaW5nOiA0MHB4O1xuICAgIH1cbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["NovaTransacaoDialogComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","conta_r5","id","ɵɵadvance","ɵɵtextInterpolate1","nome","categoria_r6","ɵɵtextInterpolate","transacao_r8","descricao","ɵɵtextInterpolate2","ɵɵpipeBind2","data","categoria","ɵɵpureFunction2","_c0","tipo","valor","conta_nome","ɵɵtemplate","TransacoesComponent_div_23_mat_card_1_Template","ctx_r2","transacoes","ɵɵlistener","TransacoesComponent_ng_template_24_Template_button_click_3_listener","ɵɵrestoreView","_r10","ctx_r9","ɵɵnextContext","ɵɵresetView","abrirDialogNovaTransacao","TransacoesComponent","constructor","supabaseService","dialog","snackBar","contas","categorias","contaFiltro","categoriaFiltro","ngOnInit","carregarDados","getContas","subscribe","next","error","open","duration","getCategorias","carregarTransacoes","getTransacoes","aplicarFiltros","dialogRef","width","afterClosed","result","ɵɵdirectiveInject","i1","SupabaseService","i2","MatDialog","i3","MatSnackBar","selectors","decls","vars","consts","template","TransacoesComponent_Template","rf","ctx","TransacoesComponent_Template_button_click_4_listener","TransacoesComponent_Template_mat_select_ngModelChange_12_listener","$event","TransacoesComponent_Template_mat_select_selectionChange_12_listener","TransacoesComponent_mat_option_15_Template","TransacoesComponent_Template_mat_select_ngModelChange_19_listener","TransacoesComponent_Template_mat_select_selectionChange_19_listener","TransacoesComponent_mat_option_22_Template","TransacoesComponent_div_23_Template","TransacoesComponent_ng_template_24_Template","ɵɵtemplateRefExtractor","length","_r3"],"sources":["C:\\Users\\Bomfim\\Documents\\GitHub\\Controle-financeiro-casal\\workspace\\sistema-financeiro-casal-frontend\\src\\app\\components\\transacoes\\transacoes.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { SupabaseService } from '../../services/supabase.service';\r\nimport { NovaTransacaoDialogComponent } from './nova-transacao-dialog/nova-transacao-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-transacoes',\r\n  template: `\r\n    <div class=\"transacoes-container\">\r\n      <div class=\"header\">\r\n        <h2>Transações</h2>\r\n        <button mat-raised-button color=\"primary\" (click)=\"abrirDialogNovaTransacao()\">\r\n          <mat-icon>add</mat-icon>\r\n          Nova Transação\r\n        </button>\r\n      </div>\r\n\r\n      <div class=\"filtros\">\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Conta</mat-label>\r\n          <mat-select [(ngModel)]=\"contaFiltro\" (selectionChange)=\"aplicarFiltros()\">\r\n            <mat-option value=\"\">Todas as contas</mat-option>\r\n            <mat-option *ngFor=\"let conta of contas\" [value]=\"conta.id\">\r\n              {{ conta.nome }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Categoria</mat-label>\r\n          <mat-select [(ngModel)]=\"categoriaFiltro\" (selectionChange)=\"aplicarFiltros()\">\r\n            <mat-option value=\"\">Todas as categorias</mat-option>\r\n            <mat-option *ngFor=\"let categoria of categorias\" [value]=\"categoria\">\r\n              {{ categoria }}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"transacoes-lista\" *ngIf=\"transacoes.length > 0; else semTransacoes\">\r\n        <mat-card *ngFor=\"let transacao of transacoes\" class=\"transacao-card\">\r\n          <mat-card-header>\r\n            <mat-card-title>{{ transacao.descricao }}</mat-card-title>\r\n            <mat-card-subtitle>\r\n              {{ transacao.data | date:'dd/MM/yyyy' }} - {{ transacao.categoria }}\r\n            </mat-card-subtitle>\r\n          </mat-card-header>\r\n          <mat-card-content>\r\n            <p class=\"valor\" [ngClass]=\"{'entrada': transacao.tipo === 'entrada', 'saida': transacao.tipo === 'saida'}\">\r\n              {{ transacao.valor | currency:'BRL' }}\r\n            </p>\r\n            <p class=\"conta\">{{ transacao.conta_nome }}</p>\r\n          </mat-card-content>\r\n        </mat-card>\r\n      </div>\r\n\r\n      <ng-template #semTransacoes>\r\n        <div class=\"sem-transacoes\">\r\n          <p>Nenhuma transação encontrada.</p>\r\n          <button mat-raised-button color=\"primary\" (click)=\"abrirDialogNovaTransacao()\">\r\n            <mat-icon>add</mat-icon>\r\n            Registrar Primeira Transação\r\n          </button>\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .transacoes-container {\r\n      padding: 20px;\r\n    }\r\n\r\n    .header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    .filtros {\r\n      display: flex;\r\n      gap: 20px;\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    .transacoes-lista {\r\n      display: grid;\r\n      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n      gap: 20px;\r\n    }\r\n\r\n    .transacao-card {\r\n      height: 100%;\r\n    }\r\n\r\n    .valor {\r\n      font-size: 1.2em;\r\n      font-weight: bold;\r\n      margin: 10px 0;\r\n    }\r\n\r\n    .entrada {\r\n      color: #4caf50;\r\n    }\r\n\r\n    .saida {\r\n      color: #f44336;\r\n    }\r\n\r\n    .conta {\r\n      color: #666;\r\n      font-size: 0.9em;\r\n    }\r\n\r\n    .sem-transacoes {\r\n      text-align: center;\r\n      padding: 40px;\r\n    }\r\n  `]\r\n})\r\nexport class TransacoesComponent implements OnInit {\r\n  transacoes: any[] = [];\r\n  contas: any[] = [];\r\n  categorias: string[] = [];\r\n  contaFiltro: string = '';\r\n  categoriaFiltro: string = '';\r\n\r\n  constructor(\r\n    private supabaseService: SupabaseService,\r\n    private dialog: MatDialog,\r\n    private snackBar: MatSnackBar\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.carregarDados();\r\n  }\r\n\r\n  carregarDados() {\r\n    // Carregar contas\r\n    this.supabaseService.getContas().subscribe({\r\n      next: (data) => {\r\n        this.contas = data;\r\n      },\r\n      error: (error) => {\r\n        this.snackBar.open('Erro ao carregar contas', 'Fechar', {\r\n          duration: 3000\r\n        });\r\n      }\r\n    });\r\n\r\n    // Carregar categorias\r\n    this.supabaseService.getCategorias().subscribe({\r\n      next: (data) => {\r\n        this.categorias = data;\r\n      },\r\n      error: (error) => {\r\n        this.snackBar.open('Erro ao carregar categorias', 'Fechar', {\r\n          duration: 3000\r\n        });\r\n      }\r\n    });\r\n\r\n    // Carregar transações\r\n    this.carregarTransacoes();\r\n  }\r\n\r\n  carregarTransacoes() {\r\n    this.supabaseService.getTransacoes(this.contaFiltro, this.categoriaFiltro).subscribe({\r\n      next: (data) => {\r\n        this.transacoes = data;\r\n      },\r\n      error: (error) => {\r\n        this.snackBar.open('Erro ao carregar transações', 'Fechar', {\r\n          duration: 3000\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  aplicarFiltros() {\r\n    this.carregarTransacoes();\r\n  }\r\n\r\n  abrirDialogNovaTransacao() {\r\n    const dialogRef = this.dialog.open(NovaTransacaoDialogComponent, {\r\n      width: '400px',\r\n      data: { contas: this.contas, categorias: this.categorias }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.carregarTransacoes();\r\n      }\r\n    });\r\n  }\r\n} "],"mappings":"AAIA,SAASA,4BAA4B,QAAQ,yDAAyD;;;;;;;;;;;;;;;IAmB1FC,EAAA,CAAAC,cAAA,qBAA4D;IAC1DD,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAa;;;;IAF4BH,EAAA,CAAAI,UAAA,UAAAC,QAAA,CAAAC,EAAA,CAAkB;IACzDN,EAAA,CAAAO,SAAA,GACF;IADEP,EAAA,CAAAQ,kBAAA,MAAAH,QAAA,CAAAI,IAAA,MACF;;;;;IAQAT,EAAA,CAAAC,cAAA,qBAAqE;IACnED,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAa;;;;IAFoCH,EAAA,CAAAI,UAAA,UAAAM,YAAA,CAAmB;IAClEV,EAAA,CAAAO,SAAA,GACF;IADEP,EAAA,CAAAQ,kBAAA,MAAAE,YAAA,MACF;;;;;;;;;;;IAMJV,EAAA,CAAAC,cAAA,mBAAsE;IAElDD,EAAA,CAAAE,MAAA,GAAyB;IAAAF,EAAA,CAAAG,YAAA,EAAiB;IAC1DH,EAAA,CAAAC,cAAA,wBAAmB;IACjBD,EAAA,CAAAE,MAAA,GACF;;IAAAF,EAAA,CAAAG,YAAA,EAAoB;IAEtBH,EAAA,CAAAC,cAAA,uBAAkB;IAEdD,EAAA,CAAAE,MAAA,GACF;;IAAAF,EAAA,CAAAG,YAAA,EAAI;IACJH,EAAA,CAAAC,cAAA,aAAiB;IAAAD,EAAA,CAAAE,MAAA,IAA0B;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAT/BH,EAAA,CAAAO,SAAA,GAAyB;IAAzBP,EAAA,CAAAW,iBAAA,CAAAC,YAAA,CAAAC,SAAA,CAAyB;IAEvCb,EAAA,CAAAO,SAAA,GACF;IADEP,EAAA,CAAAc,kBAAA,MAAAd,EAAA,CAAAe,WAAA,OAAAH,YAAA,CAAAI,IAAA,wBAAAJ,YAAA,CAAAK,SAAA,MACF;IAGiBjB,EAAA,CAAAO,SAAA,GAA0F;IAA1FP,EAAA,CAAAI,UAAA,YAAAJ,EAAA,CAAAkB,eAAA,KAAAC,GAAA,EAAAP,YAAA,CAAAQ,IAAA,gBAAAR,YAAA,CAAAQ,IAAA,cAA0F;IACzGpB,EAAA,CAAAO,SAAA,GACF;IADEP,EAAA,CAAAQ,kBAAA,MAAAR,EAAA,CAAAe,WAAA,QAAAH,YAAA,CAAAS,KAAA,cACF;IACiBrB,EAAA,CAAAO,SAAA,GAA0B;IAA1BP,EAAA,CAAAW,iBAAA,CAAAC,YAAA,CAAAU,UAAA,CAA0B;;;;;IAZjDtB,EAAA,CAAAC,cAAA,cAAgF;IAC9ED,EAAA,CAAAuB,UAAA,IAAAC,8CAAA,yBAaW;IACbxB,EAAA,CAAAG,YAAA,EAAM;;;;IAd4BH,EAAA,CAAAO,SAAA,GAAa;IAAbP,EAAA,CAAAI,UAAA,YAAAqB,MAAA,CAAAC,UAAA,CAAa;;;;;;IAiB7C1B,EAAA,CAAAC,cAAA,cAA4B;IACvBD,EAAA,CAAAE,MAAA,8CAA6B;IAAAF,EAAA,CAAAG,YAAA,EAAI;IACpCH,EAAA,CAAAC,cAAA,gBAA+E;IAArCD,EAAA,CAAA2B,UAAA,mBAAAC,oEAAA;MAAA5B,EAAA,CAAA6B,aAAA,CAAAC,IAAA;MAAA,MAAAC,MAAA,GAAA/B,EAAA,CAAAgC,aAAA;MAAA,OAAShC,EAAA,CAAAiC,WAAA,CAAAF,MAAA,CAAAG,wBAAA,EAA0B;IAAA,EAAC;IAC5ElC,EAAA,CAAAC,cAAA,eAAU;IAAAD,EAAA,CAAAE,MAAA,UAAG;IAAAF,EAAA,CAAAG,YAAA,EAAW;IACxBH,EAAA,CAAAE,MAAA,+CACF;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;AA0DnB,OAAM,MAAOgC,mBAAmB;EAO9BC,YACUC,eAAgC,EAChCC,MAAiB,EACjBC,QAAqB;IAFrB,KAAAF,eAAe,GAAfA,eAAe;IACf,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,QAAQ,GAARA,QAAQ;IATlB,KAAAb,UAAU,GAAU,EAAE;IACtB,KAAAc,MAAM,GAAU,EAAE;IAClB,KAAAC,UAAU,GAAa,EAAE;IACzB,KAAAC,WAAW,GAAW,EAAE;IACxB,KAAAC,eAAe,GAAW,EAAE;EAMzB;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACC,aAAa,EAAE;EACtB;EAEAA,aAAaA,CAAA;IACX;IACA,IAAI,CAACR,eAAe,CAACS,SAAS,EAAE,CAACC,SAAS,CAAC;MACzCC,IAAI,EAAGhC,IAAI,IAAI;QACb,IAAI,CAACwB,MAAM,GAAGxB,IAAI;MACpB,CAAC;MACDiC,KAAK,EAAGA,KAAK,IAAI;QACf,IAAI,CAACV,QAAQ,CAACW,IAAI,CAAC,yBAAyB,EAAE,QAAQ,EAAE;UACtDC,QAAQ,EAAE;SACX,CAAC;MACJ;KACD,CAAC;IAEF;IACA,IAAI,CAACd,eAAe,CAACe,aAAa,EAAE,CAACL,SAAS,CAAC;MAC7CC,IAAI,EAAGhC,IAAI,IAAI;QACb,IAAI,CAACyB,UAAU,GAAGzB,IAAI;MACxB,CAAC;MACDiC,KAAK,EAAGA,KAAK,IAAI;QACf,IAAI,CAACV,QAAQ,CAACW,IAAI,CAAC,6BAA6B,EAAE,QAAQ,EAAE;UAC1DC,QAAQ,EAAE;SACX,CAAC;MACJ;KACD,CAAC;IAEF;IACA,IAAI,CAACE,kBAAkB,EAAE;EAC3B;EAEAA,kBAAkBA,CAAA;IAChB,IAAI,CAAChB,eAAe,CAACiB,aAAa,CAAC,IAAI,CAACZ,WAAW,EAAE,IAAI,CAACC,eAAe,CAAC,CAACI,SAAS,CAAC;MACnFC,IAAI,EAAGhC,IAAI,IAAI;QACb,IAAI,CAACU,UAAU,GAAGV,IAAI;MACxB,CAAC;MACDiC,KAAK,EAAGA,KAAK,IAAI;QACf,IAAI,CAACV,QAAQ,CAACW,IAAI,CAAC,6BAA6B,EAAE,QAAQ,EAAE;UAC1DC,QAAQ,EAAE;SACX,CAAC;MACJ;KACD,CAAC;EACJ;EAEAI,cAAcA,CAAA;IACZ,IAAI,CAACF,kBAAkB,EAAE;EAC3B;EAEAnB,wBAAwBA,CAAA;IACtB,MAAMsB,SAAS,GAAG,IAAI,CAAClB,MAAM,CAACY,IAAI,CAACnD,4BAA4B,EAAE;MAC/D0D,KAAK,EAAE,OAAO;MACdzC,IAAI,EAAE;QAAEwB,MAAM,EAAE,IAAI,CAACA,MAAM;QAAEC,UAAU,EAAE,IAAI,CAACA;MAAU;KACzD,CAAC;IAEFe,SAAS,CAACE,WAAW,EAAE,CAACX,SAAS,CAACY,MAAM,IAAG;MACzC,IAAIA,MAAM,EAAE;QACV,IAAI,CAACN,kBAAkB,EAAE;;IAE7B,CAAC,CAAC;EACJ;;;uBA1EWlB,mBAAmB,EAAAnC,EAAA,CAAA4D,iBAAA,CAAAC,EAAA,CAAAC,eAAA,GAAA9D,EAAA,CAAA4D,iBAAA,CAAAG,EAAA,CAAAC,SAAA,GAAAhE,EAAA,CAAA4D,iBAAA,CAAAK,EAAA,CAAAC,WAAA;IAAA;EAAA;;;YAAnB/B,mBAAmB;MAAAgC,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAhH5BzE,EAAA,CAAAC,cAAA,aAAkC;UAE1BD,EAAA,CAAAE,MAAA,2BAAU;UAAAF,EAAA,CAAAG,YAAA,EAAK;UACnBH,EAAA,CAAAC,cAAA,gBAA+E;UAArCD,EAAA,CAAA2B,UAAA,mBAAAgD,qDAAA;YAAA,OAASD,GAAA,CAAAxC,wBAAA,EAA0B;UAAA,EAAC;UAC5ElC,EAAA,CAAAC,cAAA,eAAU;UAAAD,EAAA,CAAAE,MAAA,UAAG;UAAAF,EAAA,CAAAG,YAAA,EAAW;UACxBH,EAAA,CAAAE,MAAA,iCACF;UAAAF,EAAA,CAAAG,YAAA,EAAS;UAGXH,EAAA,CAAAC,cAAA,aAAqB;UAEND,EAAA,CAAAE,MAAA,aAAK;UAAAF,EAAA,CAAAG,YAAA,EAAY;UAC5BH,EAAA,CAAAC,cAAA,qBAA2E;UAA/DD,EAAA,CAAA2B,UAAA,2BAAAiD,kEAAAC,MAAA;YAAA,OAAAH,GAAA,CAAAhC,WAAA,GAAAmC,MAAA;UAAA,EAAyB,6BAAAC,oEAAA;YAAA,OAAoBJ,GAAA,CAAAnB,cAAA,EAAgB;UAAA,EAApC;UACnCvD,EAAA,CAAAC,cAAA,qBAAqB;UAAAD,EAAA,CAAAE,MAAA,uBAAe;UAAAF,EAAA,CAAAG,YAAA,EAAa;UACjDH,EAAA,CAAAuB,UAAA,KAAAwD,0CAAA,wBAEa;UACf/E,EAAA,CAAAG,YAAA,EAAa;UAGfH,EAAA,CAAAC,cAAA,yBAAkC;UACrBD,EAAA,CAAAE,MAAA,iBAAS;UAAAF,EAAA,CAAAG,YAAA,EAAY;UAChCH,EAAA,CAAAC,cAAA,qBAA+E;UAAnED,EAAA,CAAA2B,UAAA,2BAAAqD,kEAAAH,MAAA;YAAA,OAAAH,GAAA,CAAA/B,eAAA,GAAAkC,MAAA;UAAA,EAA6B,6BAAAI,oEAAA;YAAA,OAAoBP,GAAA,CAAAnB,cAAA,EAAgB;UAAA,EAApC;UACvCvD,EAAA,CAAAC,cAAA,qBAAqB;UAAAD,EAAA,CAAAE,MAAA,2BAAmB;UAAAF,EAAA,CAAAG,YAAA,EAAa;UACrDH,EAAA,CAAAuB,UAAA,KAAA2D,0CAAA,wBAEa;UACflF,EAAA,CAAAG,YAAA,EAAa;UAIjBH,EAAA,CAAAuB,UAAA,KAAA4D,mCAAA,iBAeM;UAENnF,EAAA,CAAAuB,UAAA,KAAA6D,2CAAA,gCAAApF,EAAA,CAAAqF,sBAAA,CAQc;UAChBrF,EAAA,CAAAG,YAAA,EAAM;;;;UA7CYH,EAAA,CAAAO,SAAA,IAAyB;UAAzBP,EAAA,CAAAI,UAAA,YAAAsE,GAAA,CAAAhC,WAAA,CAAyB;UAEL1C,EAAA,CAAAO,SAAA,GAAS;UAATP,EAAA,CAAAI,UAAA,YAAAsE,GAAA,CAAAlC,MAAA,CAAS;UAQ7BxC,EAAA,CAAAO,SAAA,GAA6B;UAA7BP,EAAA,CAAAI,UAAA,YAAAsE,GAAA,CAAA/B,eAAA,CAA6B;UAEL3C,EAAA,CAAAO,SAAA,GAAa;UAAbP,EAAA,CAAAI,UAAA,YAAAsE,GAAA,CAAAjC,UAAA,CAAa;UAOtBzC,EAAA,CAAAO,SAAA,GAA6B;UAA7BP,EAAA,CAAAI,UAAA,SAAAsE,GAAA,CAAAhD,UAAA,CAAA4D,MAAA,KAA6B,aAAAC,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
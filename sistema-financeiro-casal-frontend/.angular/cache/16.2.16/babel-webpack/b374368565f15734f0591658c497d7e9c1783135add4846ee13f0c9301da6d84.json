{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nfunction LoginComponent_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Email \\u00E9 obrigat\\u00F3rio \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Email inv\\u00E1lido \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Senha \\u00E9 obrigat\\u00F3ria \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(fb, authService, router) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.loginForm.valid) {\n      const {\n        email,\n        password\n      } = this.loginForm.value;\n      this.authService.login({\n        email,\n        password\n      }).subscribe({\n        next: () => {\n          this.router.navigate(['/dashboard']);\n        },\n        error: error => {\n          console.error('Erro no login:', error);\n        }\n      });\n    }\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 20,\n      vars: 5,\n      consts: [[1, \"login-container\"], [3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"formControlName\", \"email\", \"type\", \"email\", \"required\", \"\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"password\", \"type\", \"password\", \"required\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-card\")(2, \"mat-card-header\")(3, \"mat-card-title\");\n          i0.ɵɵtext(4, \"Login\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(5, \"mat-card-content\")(6, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_6_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(7, \"mat-form-field\", 2)(8, \"mat-label\");\n          i0.ɵɵtext(9, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(10, \"input\", 3);\n          i0.ɵɵtemplate(11, LoginComponent_mat_error_11_Template, 2, 0, \"mat-error\", 4);\n          i0.ɵɵtemplate(12, LoginComponent_mat_error_12_Template, 2, 0, \"mat-error\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"mat-form-field\", 2)(14, \"mat-label\");\n          i0.ɵɵtext(15, \"Senha\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(16, \"input\", 5);\n          i0.ɵɵtemplate(17, LoginComponent_mat_error_17_Template, 2, 0, \"mat-error\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"button\", 6);\n          i0.ɵɵtext(19, \" Entrar \");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          let tmp_2_0;\n          let tmp_3_0;\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.hasError(\"required\"));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_2_0.hasError(\"email\"));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", (tmp_3_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_3_0.hasError(\"required\"));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n        }\n      },\n      dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i5.MatButton, i6.MatCard, i6.MatCardContent, i6.MatCardHeader, i6.MatCardTitle, i7.MatFormField, i7.MatLabel, i7.MatError, i8.MatInput],\n      styles: [\".login-container[_ngcontent-%COMP%] {\\n  height: 100vh;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  background-color: #f5f5f5;\\n}\\n\\nmat-card[_ngcontent-%COMP%] {\\n  width: 100%;\\n  max-width: 400px;\\n  padding: 2rem;\\n}\\n\\nform[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 1rem;\\n}\\n\\nmat-form-field[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  width: 100%;\\n  margin-top: 1rem;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0k7RUFDRSxhQUFBO0VBQ0EsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSx5QkFBQTtBQUFOOztBQUVJO0VBQ0UsV0FBQTtFQUNBLGdCQUFBO0VBQ0EsYUFBQTtBQUNOOztBQUNJO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsU0FBQTtBQUVOOztBQUFJO0VBQ0UsV0FBQTtBQUdOOztBQURJO0VBQ0UsV0FBQTtFQUNBLGdCQUFBO0FBSU4iLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICAubG9naW4tY29udGFpbmVyIHtcbiAgICAgIGhlaWdodDogMTAwdmg7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjVmNTtcbiAgICB9XG4gICAgbWF0LWNhcmQge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBtYXgtd2lkdGg6IDQwMHB4O1xuICAgICAgcGFkZGluZzogMnJlbTtcbiAgICB9XG4gICAgZm9ybSB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgIGdhcDogMXJlbTtcbiAgICB9XG4gICAgbWF0LWZvcm0tZmllbGQge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxuICAgIGJ1dHRvbiB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIG1hcmdpbi10b3A6IDFyZW07XG4gICAgfVxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","LoginComponent","constructor","fb","authService","router","loginForm","group","email","required","password","onSubmit","valid","value","login","subscribe","next","navigate","error","console","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_6_listener","ɵɵelement","ɵɵtemplate","LoginComponent_mat_error_11_Template","LoginComponent_mat_error_12_Template","LoginComponent_mat_error_17_Template","ɵɵadvance","ɵɵproperty","tmp_1_0","get","hasError","tmp_2_0","tmp_3_0","invalid"],"sources":["C:\\Users\\Bomfim\\Documents\\GitHub\\Controle-financeiro-casal\\workspace\\sistema-financeiro-casal-frontend\\src\\app\\components\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  template: `\r\n    <div class=\"login-container\">\r\n      <mat-card>\r\n        <mat-card-header>\r\n          <mat-card-title>Login</mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n          <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Email</mat-label>\r\n              <input matInput formControlName=\"email\" type=\"email\" required>\r\n              <mat-error *ngIf=\"loginForm.get('email')?.hasError('required')\">\r\n                Email é obrigatório\r\n              </mat-error>\r\n              <mat-error *ngIf=\"loginForm.get('email')?.hasError('email')\">\r\n                Email inválido\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\">\r\n              <mat-label>Senha</mat-label>\r\n              <input matInput formControlName=\"password\" type=\"password\" required>\r\n              <mat-error *ngIf=\"loginForm.get('password')?.hasError('required')\">\r\n                Senha é obrigatória\r\n              </mat-error>\r\n            </mat-form-field>\r\n\r\n            <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"loginForm.invalid\">\r\n              Entrar\r\n            </button>\r\n          </form>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  `,\r\n  styles: [`\r\n    .login-container {\r\n      height: 100vh;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      background-color: #f5f5f5;\r\n    }\r\n    mat-card {\r\n      width: 100%;\r\n      max-width: 400px;\r\n      padding: 2rem;\r\n    }\r\n    form {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 1rem;\r\n    }\r\n    mat-form-field {\r\n      width: 100%;\r\n    }\r\n    button {\r\n      width: 100%;\r\n      margin-top: 1rem;\r\n    }\r\n  `]\r\n})\r\nexport class LoginComponent {\r\n  loginForm: FormGroup;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n    this.loginForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.loginForm.valid) {\r\n      const { email, password } = this.loginForm.value;\r\n      this.authService.login({ email, password }).subscribe({\r\n        next: () => {\r\n          this.router.navigate(['/dashboard']);\r\n        },\r\n        error: (error) => {\r\n          console.error('Erro no login:', error);\r\n        }\r\n      });\r\n    }\r\n  }\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}